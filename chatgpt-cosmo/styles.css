/* -------------- Base tokens by our theme -------------- */
html[data-cosmo-theme="nebula"] {
	--cosmo-bg: radial-gradient(1200px 800px at 12% -18%, #4a3aa3 0%, transparent 60%),
	            radial-gradient(1200px 800px at 108% 118%, #0e7ac4 0%, transparent 60%),
	            #0b0b12;
	--cosmo-card: rgba(255,255,255,0.05);
	--cosmo-border: rgba(255,255,255,0.14);
	--cosmo-glow: 0 0 0 1px rgba(150, 170, 255, 0.22), 0 12px 36px rgba(60, 120, 255, 0.16);
	--cosmo-blur: saturate(1.15) blur(8px);
	--cosmo-text: #e8ecff;
	--cosmo-subtle: #9aa6c3;
}

/* === Cosmo: unify header action buttons === */
button[data-testid="model-switcher-dropdown-button"],
button[data-testid="share-chat-button"],
button[data-testid="conversation-options-button"] {
	border: 1px solid var(--cosmo-border) !important;
	box-shadow: var(--cosmo-glow);
	border-radius: 12px !important;
	transition: transform .12s ease, box-shadow .12s ease;
}
button[data-testid="share-chat-button"]:hover,
button[data-testid="conversation-options-button"]:hover {
	transform: translateY(-1px);
}

/* === Cosmo: in-chat action icon hover === */
button[data-testid*="-turn-action-button"] {
	transition: background-color .12s ease;
}
button[data-testid*="-turn-action-button"]:hover {
	background-color: rgba(255, 255, 255, .06);
}

/* === Cosmo: slim sidebar icon hover === */
#stage-sidebar-tiny-bar [__menu-item] {
	transition: background-color .12s ease;
}
#stage-sidebar-tiny-bar [__menu-item]:hover {
	background-color: rgba(255, 255, 255, .05);
}

/* Glassy variant */
html[data-cosmo-theme="glass"] {
	--cosmo-bg: linear-gradient(120deg, #0e0f14, #0b1116 40%, #0e0f14 100%);
	--cosmo-card: rgba(255,255,255,0.04);
	--cosmo-border: rgba(255,255,255,0.12);
	--cosmo-glow: 0 0 0 1px rgba(255,255,255,0.08), 0 12px 36px rgba(0,0,0,0.35);
	--cosmo-blur: blur(10px);
	--cosmo-text: #f2f4f8;
	--cosmo-subtle: #a8b0bd;
}

/* Monochrome variant */
html[data-cosmo-theme="mono"] {
	--cosmo-bg: #0e0f11;
	/* semi-transparent so backdrop-filter is visible */
	--cosmo-card: rgba(21, 23, 26, 0.72);
	--cosmo-border: #262a2f;
	--cosmo-glow: 0 0 0 1px #262a2f;
	/* enable frosted look on mono */
	--cosmo-blur: blur(8px);
	--cosmo-text: #e6e7e9;
	--cosmo-subtle: #a3a7ad;
}

/* Sunset (warm) */
html[data-cosmo-theme="sunset"] {
	--cosmo-bg: radial-gradient(1200px 800px at 12% -14%, #6a2747 0%, transparent 58%),
	            radial-gradient(1200px 800px at 106% 118%, #ff9a2e 0%, transparent 58%),
	            #0b0b12;
	--cosmo-card: rgba(255, 230, 215, .05);
	--cosmo-border: rgba(255, 230, 215, .16);
	--cosmo-glow: 0 0 0 1px rgba(255,175,140,.18), 0 12px 36px rgba(255,140,0,.16);
	--cosmo-blur: saturate(1.08) blur(8px);
	--cosmo-text: #ffe9df;
	--cosmo-subtle: #ffcfb7;
}

/* Vapor (cool teal/purple) */
html[data-cosmo-theme="vapor"] {
	--cosmo-bg: radial-gradient(1200px 800px at 8% -12%, #442066 0%, transparent 58%),
	            radial-gradient(1200px 800px at 104% 116%, #0a8a8a 0%, transparent 58%),
	            #0b0b12;
	--cosmo-card: rgba(255,255,255,0.05);
	--cosmo-border: rgba(255,255,255,0.15);
	--cosmo-glow: 0 0 0 1px rgba(154,119,222,.20), 0 12px 36px rgba(42,171,171,.16);
	--cosmo-blur: saturate(1.1) blur(9px);
	--cosmo-text: #eafcff;
	--cosmo-subtle: #b3e6e9;
}

/* High contrast */
html[data-cosmo-theme="contrast"] {
	--cosmo-bg: #0a0b0e;
	/* semi-transparent so backdrop-filter is visible */
	--cosmo-card: rgba(18, 20, 26, 0.75);
	--cosmo-border: #2b3240;
	--cosmo-glow: 0 0 0 1px #2b3240;
	/* enable frosted look on contrast */
	--cosmo-blur: blur(8px);
	--cosmo-text: #f3f6ff;
	--cosmo-subtle: #c2c9d6;
}

/* Mocha (earthy, cozy) */
html[data-cosmo-theme="mocha"] {
	--cosmo-bg: radial-gradient(1200px 800px at 14% -16%, #5a3e2b 0%, transparent 58%),
	            radial-gradient(1200px 800px at 106% 118%, rgba(200,160,122,.38) 0%, transparent 52%),
	            #201813;
	--cosmo-card: rgba(245, 236, 224, .06);
	--cosmo-border: rgba(245, 236, 224, .18);
	--cosmo-glow: 0 0 0 1px rgba(201, 178, 150, .18), 0 12px 36px rgba(80, 54, 34, .22);
	--cosmo-blur: saturate(1.06) blur(8px);
	--cosmo-text: #f4efe7;
	--cosmo-subtle: #d6c7b6;
}

/* -------------- Page canvas -------------- */
/* Top-level HTML is marked with class 'dark' and data-chat-theme — we stay compatible. */
html.dark { background: var(--cosmo-bg) !important; color: var(--cosmo-text); }

/* Subtle canvas vignette for depth */
html.dark::after{
	content: ""; position: fixed; inset: 0; pointer-events: none;
	background:
		radial-gradient(90% 70% at 50% 120%, rgba(0,0,0,.28), transparent 60%),
		radial-gradient(50% 40% at 50% -10%, rgba(255,255,255,.03), transparent 60%);
	mix-blend-mode: soft-light; opacity: .9;
}

/* -------------- Header polish -------------- */



/* -------------- Sidebar glass -------------- */
/* Sidebar slim rail id='stage-sidebar-tiny-bar' */
#stage-sidebar-tiny-bar {
	background: var(--cosmo-card) !important;
	border-right: 1px solid var(--cosmo-border);
	backdrop-filter: var(--cosmo-blur);
}

/* Main sidebar panel (full width) */
.bg-token-sidebar-surface-primary {
	background: var(--cosmo-card) !important;
	border-right: 1px solid var(--cosmo-border);
	backdrop-filter: var(--cosmo-blur);
	box-shadow: inset -1px 0 0 rgba(255,255,255,.03);
	color: var(--cosmo-text);
}

/* Cover any additional sidebar surface tokens (secondary/tertiary) */
[class*="bg-token-sidebar-surface-"] {
	background: var(--cosmo-card) !important;
	border-right: 1px solid var(--cosmo-border);
	backdrop-filter: var(--cosmo-blur);
	box-shadow: inset -1px 0 0 rgba(255,255,255,.03);
	color: var(--cosmo-text);
}

/* Sidebar menu item polish */
[class*="bg-token-sidebar-surface-"] [__menu-item] {
	border-radius: 10px;
	transition: background-color .12s ease;
}
[class*="bg-token-sidebar-surface-"] [__menu-item]:hover {
	background-color: rgba(255, 255, 255, .06);
}

/* Ensure links rendered as items inherit readable color and hover */
a[data-testid^="sidebar-item-"] {
	color: var(--cosmo-text) !important;
	border-radius: 10px;
	transition: background-color .12s ease;
}
a[data-testid^="sidebar-item-"]:hover { background-color: rgba(255,255,255,.06); }

/* Slideover/popover variants for sidebar */
#stage-slideover-sidebar,
#stage-popover-sidebar {
	background: var(--cosmo-card) !important;
	border-right: 1px solid var(--cosmo-border);
	backdrop-filter: var(--cosmo-blur);
}


/* -------------- Main & thread zones -------------- */
#main, #thread {
	/* Gentle polish to the scroll surface */
	scrollbar-width: thin;
	scrollbar-color: #3a4a64 transparent;
}

/* Smooth color transitions for major surfaces */
html, body, #main, #thread,
.bg-token-sidebar-surface-primary,
[class*="bg-token-sidebar-surface-"],
[role="menu"], [role="listbox"], [data-radix-popper-content-wrapper] > div,
div[popover], .popover, .dropdown, .menu,
#thread pre, #prompt-textarea {
	transition: background-color .35s ease, color .35s ease, border-color .35s ease, box-shadow .35s ease;
}

/* -------------- Generic utility overrides -------------- */
/* Utility class seen on header/skip link: bg-token-main-surface-primary */
.bg-token-main-surface-primary {
	background: transparent !important;
}

/* “Skip to content” chip can float nicely over our background */
a[data-skip-to-content] {
	background: var(--cosmo-card) !important;
	border: 1px solid var(--cosmo-border) !important;
	backdrop-filter: var(--cosmo-blur);
	color: var(--cosmo-text) !important;
}


/* === Cosmo: extended polish === */

/* Header & sidebar depth */
#page-header {
	background: linear-gradient(90deg,
		color-mix(in oklab, var(--cosmo-accent-1) 12%, transparent),
		color-mix(in oklab, var(--cosmo-accent-2) 10%, transparent)
	) !important;
	backdrop-filter: var(--cosmo-blur);
	border-bottom: 1px solid var(--cosmo-border);
	box-shadow: var(--cosmo-glow), inset 0 -1px 0 rgba(255,255,255,.03);
	border-radius: 0 0 14px 14px;
}

#stage-sidebar-tiny-bar {
	background: var(--cosmo-card) !important;
	border-right: 1px solid var(--cosmo-border);
	backdrop-filter: var(--cosmo-blur);
	box-shadow: inset -1px 0 0 rgba(255,255,255,.03);
}

/* Ensure sidebar and header meet seamlessly */
html.dark .bg-token-sidebar-surface-primary,
html.dark #page-header {
	/* matching subtle border to avoid visual gap */
	border-color: var(--cosmo-border);
}

/* Buttons & core controls */
button[data-testid="model-switcher-dropdown-button"] {
	transition: transform .12s ease, box-shadow .12s ease, filter .12s ease;
	border-radius: 12px !important;
}
button[data-testid="model-switcher-dropdown-button"]:active { transform: translateY(0); filter: brightness(.98); }

/* Main/thread readability */
#main, #thread { color: var(--cosmo-text); line-height: 1.5; }
#thread p, #thread li, #thread blockquote { color: var(--cosmo-text); }
#thread small, #thread time, #thread figcaption { color: var(--cosmo-subtle); }

/* Code blocks */
#thread pre, #thread code { font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace; }
#thread pre {
	background: rgba(0,0,0,.35);
	border: 1px solid var(--cosmo-border);
	border-radius: 12px;
	padding: 12px 14px;
	box-shadow: 0 12px 32px rgba(0,0,0,.25);
}
#thread code:not(pre code) {
	background: rgba(255,255,255,.06);
	border: 1px solid var(--cosmo-border);
	border-radius: 6px;
	padding: .1em .35em;
}

/* Menus & popovers */
[role="menu"], [role="listbox"], [data-radix-popper-content-wrapper] > div,
div[popover], .popover, .dropdown, .menu {
	background: var(--cosmo-card) !important;
	border: 1px solid var(--cosmo-border) !important;
	backdrop-filter: var(--cosmo-blur);
	box-shadow: var(--cosmo-glow);
	border-radius: 12px !important;
}
[role="menu"] [role="menuitem"],
[role="listbox"] [role="option"] { border-radius: 8px; }
[role="menu"] [role="menuitem"]:hover,
[role="listbox"] [role="option"][aria-selected="true"] {
	background: rgba(255,255,255,.06);
}

/* Focus visibility */
::where(button, a, input, select, textarea):focus-visible {
	outline: none;
	box-shadow:
		0 0 0 2px color-mix(in oklab, var(--cosmo-accent-2) 28%, transparent),
		0 0 0 4px color-mix(in oklab, var(--cosmo-accent-2) 14%, transparent);
	border-radius: 10px;
}

/* Unified slim scrollbars across panels */
* { scrollbar-width: thin; scrollbar-color: #3a4a64 transparent; }
/* Chromium/Edge scrollbars */
::-webkit-scrollbar { width: 8px; }
::-webkit-scrollbar-track { background: transparent; }
::-webkit-scrollbar-thumb {
	background-image: linear-gradient(135deg,
		color-mix(in oklab, var(--cosmo-accent-1) 55%, #3a4a64),
		color-mix(in oklab, var(--cosmo-accent-2) 55%, #3a4a64)
	);
	border-radius: 6px;
}

/* Mocha adjustments */
html[data-cosmo-theme="mocha"] * { scrollbar-color: #7a6a5a transparent; }
html[data-cosmo-theme="mocha"] ::selection { background: rgba(240, 225, 207, .35); color: #2a1e17; }
html[data-cosmo-theme="mocha"] #thread { line-height: 1.65; }

/* Motion respect */
@media (prefers-reduced-motion: reduce) {
	* { transition: none !important; animation: none !important; }
}

/* Contrast variant tweaks */
html[data-cosmo-theme="contrast"] #page-header,
html[data-cosmo-theme="contrast"] #stage-sidebar-tiny-bar,
html[data-cosmo-theme="contrast"] .bg-token-sidebar-surface-primary,
html[data-cosmo-theme="contrast"] [class*="bg-token-sidebar-surface-"] {
	background: var(--cosmo-card) !important;
}

/* === Cosmo accents and chatbar/sidebar coverage === */
:root { --cosmo-accent-1:#6a5cff; --cosmo-accent-2:#00c2ff; }
html[data-cosmo-theme="glass"]   { --cosmo-accent-1:#6f7cff; --cosmo-accent-2:#9be7ff; }
html[data-cosmo-theme="mono"]    { --cosmo-accent-1:#4a86ff; --cosmo-accent-2:#7dd3fc; }
html[data-cosmo-theme="sunset"]  { --cosmo-accent-1:#ff7a59; --cosmo-accent-2:#ffd38a; }
html[data-cosmo-theme="vapor"]   { --cosmo-accent-1:#8a63d2; --cosmo-accent-2:#34d5d5; }
html[data-cosmo-theme="contrast"]{ --cosmo-accent-1:#9ab6ff; --cosmo-accent-2:#78e2ff; }
html[data-cosmo-theme="mocha"]   { --cosmo-accent-1:#c28b6a; --cosmo-accent-2:#f0e1cf; }

/* --- Mocha fine-tuning for long reads --- */
html.dark[data-cosmo-theme="mocha"]::after{
	background:
		radial-gradient(60% 45% at 115% 115%, rgba(0,0,0,.30), transparent 62%),
		radial-gradient(90% 70% at 50% 120%, rgba(32,24,19,.24), transparent 60%),
		radial-gradient(50% 40% at 50% -10%, rgba(245,236,224,.05), transparent 60%);
	opacity: .9;
}

/* Sepia-tinted code surfaces */
html[data-cosmo-theme="mocha"] #thread pre {
	background: rgba(32,24,19,.72);
	border-color: color-mix(in oklab, var(--cosmo-border) 65%, transparent);
}
html[data-cosmo-theme="mocha"] #thread code:not(pre code) {
	background: rgba(245,236,224,.10);
	border-color: color-mix(in oklab, var(--cosmo-border) 55%, transparent);
}

/* Link and quote polish */
html[data-cosmo-theme="mocha"] #thread a {
	color: color-mix(in oklab, var(--cosmo-accent-1) 78%, #ffffff 22%);
	text-decoration-color: color-mix(in oklab, var(--cosmo-accent-1) 55%, transparent);
}
html[data-cosmo-theme="mocha"] #thread a:hover {
	text-decoration-color: color-mix(in oklab, var(--cosmo-accent-1) 85%, transparent);
}
html[data-cosmo-theme="mocha"] #thread blockquote {
	background: rgba(245,236,224,.05);
	border-left: 3px solid color-mix(in oklab, var(--cosmo-accent-1) 35%, transparent);
}

/* Gentle typography for body text */
html[data-cosmo-theme="mocha"] #thread p,
html[data-cosmo-theme="mocha"] #thread li {
	letter-spacing: .003em;
	hyphens: auto;
}

/* New Chat uses native site styling */

 

/* ----- Force the site canvas to use our theme background ----- */
html, body { background: var(--cosmo-bg) !important; }

/* Neutralize site wrappers so our BG shows through */
#__next,
main[role="main"],
#main,
#thread,
[data-testid="stretched-body"],
.bg-token-main-surface-primary,
.bg-token-main-surface-secondary,
.bg-token-main-surface-tertiary {
	background: transparent !important;
}
/* Thread scroller itself should be transparent */
#thread > .composer-parent > div > div[class*="overflow-y-auto"],
#thread [class*="overflow-y-auto"] {
	background: transparent !important;
}
/* Additional thread coverage: neutralize token backgrounds in message view */
#main [class*="bg-token-bg-"],
#main [class*="bg-token-main-surface-"],
#main [class*="bg-token-surface-"],
#thread [class*="bg-token-bg-"],
#thread [class*="bg-token-main-surface-"],
#thread [class*="bg-token-surface-"] {
	background: transparent !important;
}
#main .shadow-short, #thread .shadow-short { box-shadow: none !important; }

/* Bottom container beneath composer should not paint a surface */
#thread-bottom-container,
#thread-bottom-container::before,
#thread-bottom-container::after {
	background: transparent !important;
	box-shadow: none !important;
	border: none !important;
}

/* Keep a smooth, fixed gradient feel */
html, body { background-attachment: fixed; }

/* ===== consolidated into Unified Glass Composer ===== */

/* 1. Neutralize the native opaque wrapper inside the composer form */
form:has(#prompt-textarea) .bg-token-bg-primary {
	background: transparent !important;
	box-shadow: none !important;
	border: none !important;
	/* remove internal padding that inflates initial height */
	padding: 0 !important;
}
form:has(#prompt-textarea) .shadow-short { box-shadow: none !important; }

/* removed: legacy composer dock styling */

/* removed: legacy full-bleed underlay */

/* removed: duplicate textarea styles */

/* === Cosmo: Unified Glass Composer === */
form:has(#prompt-textarea) {
	background: var(--cosmo-card) !important;
	border: 1px solid var(--cosmo-border) !important;
	backdrop-filter: var(--cosmo-blur) !important;
	border-radius: 22px !important;
	box-shadow: var(--cosmo-glow), 0 1px 0 rgba(255,255,255,.04) !important;
	padding: 6px !important;
	transition: transform .12s ease, box-shadow .12s ease;
	position: relative;
}

/* Collapse spacer sibling that adds fixed height under the editor on first paint */
form:has(#prompt-textarea) div:has(#prompt-textarea) ~ div[style*="height"] { height: 0 !important; }

/* Reserve space for trailing actions and offset the field from the + button
   so the visual matches the post-input state immediately. */
form:has(#prompt-textarea) .relative.mx-5.flex { transform: translateX(32px) !important; }
form:has(#prompt-textarea) .relative.mx-5.flex { margin-inline-end: calc(5*var(--spacing) + 110px) !important; }

/* Textarea: transparent over glass with subtle inner definition */
#prompt-textarea,
textarea[name="prompt-textarea"] {
	background: transparent !important;
	border: 1px solid color-mix(in oklab, var(--cosmo-border) 45%, transparent) !important;
	border-radius: 16px !important;
	padding: 14px !important;
	min-height: 56px !important;
	color: var(--cosmo-text) !important;
	box-shadow: inset 0 2px 6px rgba(0,0,0,0.20) !important;
	box-sizing: border-box !important;
	line-height: 1.4 !important;
}
/* Prevent placeholder paragraph margins from inflating initial height */
#prompt-textarea .placeholder { margin: 0 !important; }
/* Trim top/bottom edge gaps without affecting inner paragraph spacing */
#prompt-textarea > p:first-child { margin-top: 0 !important; }
#prompt-textarea > p:last-child { margin-bottom: 0 !important; }
/* Keep initial placeholder height aligned with the slim state */
#prompt-textarea:has(.placeholder) { min-height: 56px !important; }
@supports not (border-color: color-mix(in oklab, white, black)) {
	#prompt-textarea { border-color: var(--cosmo-border) !important; }
}

/* Focus state for the whole composer */
form:has(#prompt-textarea:focus-within) {
	transform: translateY(-2px);
	box-shadow: var(--cosmo-glow), 0 0 0 3px color-mix(in oklab, var(--cosmo-accent-2) 30%, transparent) !important;
}

form:has(#prompt-textarea):hover{
	transform: translateY(-1px);
	box-shadow: var(--cosmo-glow), 0 1px 0 rgba(255,255,255,.05), 0 14px 40px rgba(0,0,0,.25);
}

/* Subtle sheen and focus inner ring */
form:has(#prompt-textarea)::before {
	content: ""; position: absolute; inset: 1px; pointer-events: none;
	border-radius: inherit; mix-blend-mode: overlay; opacity: .5;
	background: linear-gradient(140deg, rgba(255,255,255,.10), rgba(255,255,255,0) 28% 72%, rgba(255,255,255,.08));
}
form:has(#prompt-textarea:focus-within)::after {
	content: ""; position: absolute; inset: 0; pointer-events: none; border-radius: inherit;
	box-shadow: inset 0 0 0 1px color-mix(in oklab, var(--cosmo-accent-2) 18%, transparent);
	opacity: .75;
}

/* Unify all buttons within the composer */
form:has(#prompt-textarea) button {
	border-radius: 14px !important;
	transition: transform .12s ease, filter .12s ease, box-shadow .12s ease, background-color .12s ease;
	border: 1px solid transparent !important;
}
form:has(#prompt-textarea) button:hover { transform: translateY(-1px); }
form:has(#prompt-textarea) button:active { transform: translateY(0); filter: brightness(.95); }

/* Secondary buttons (+, mic, etc.) */
button[data-testid="composer-plus-btn"],
button[data-testid="composer-speech-button"] {
	background: var(--cosmo-card) !important;
	border: 1px solid var(--cosmo-border) !important;
	box-shadow: var(--cosmo-glow);
	position: relative;
}
button[data-testid="composer-plus-btn"]::before,
button[data-testid="composer-speech-button"]::before{
	content: ""; position: absolute; inset: 1px; border-radius: inherit; pointer-events: none;
	background: linear-gradient(180deg, rgba(255,255,255,.08), rgba(255,255,255,0));
	opacity: .6;
}

/* Primary submit button */
form:has(#prompt-textarea) button[type="submit"] {
	background-image: linear-gradient(135deg, var(--cosmo-accent-1), var(--cosmo-accent-2));
	background-size: 200% 200%;
	color: #fff !important;
	border: none !important;
	box-shadow: 0 8px 20px -6px color-mix(in oklab, var(--cosmo-accent-1) 50%, black);
	transition: background-position .35s ease, filter .12s ease, transform .12s ease;
}
form:has(#prompt-textarea) button[type="submit"]:hover { filter: brightness(1.1); }

/* === Cosmo — sticky footer wrapper reset (kills the gray pad) === */
::where(div,section,footer)[class*="sticky"]:has(#prompt-textarea),
::where(div,section,footer)[style*="position: sticky"]:has(#prompt-textarea) {
	background: transparent !important;
	box-shadow: none !important;
	border: none !important;
}
::where(div,section,footer)[class*="sticky"]:has(#prompt-textarea)::before,
::where(div,section,footer)[class*="sticky"]:has(#prompt-textarea)::after,
::where(div,section,footer)[style*="position: sticky"]:has(#prompt-textarea)::before,
::where(div,section,footer)[style*="position: sticky"]:has(#prompt-textarea)::after {
	background: none !important;
	box-shadow: none !important;
	opacity: 0 !important;
}

/* === Cosmo: Unified Glass Composer — end === */
